---

- name: Download the Go tarball
  shell: wget "{{ go_download_location }}"
  args:
    chdir: /usr/local/src/
    creates: /usr/local/src/{{ go_tarball }}
  environment: "{{ proxy_env }}"
  become: yes

- name: Register the current Go version (if any)
  command: /usr/local/go/bin/go version
  ignore_errors: yes
  register: go_version
  changed_when: false

- name: Remove old installation of Go
  file:
    path: /usr/local/go
    state: absent
  become: yes
  when: go_version|failed or go_version.stdout != go_version_target

- name: Extract the Go tarball if Go is not yet installed or not the desired version
  unarchive:
    src: /usr/local/src/{{ go_tarball }}
    dest: /usr/local
    copy: no
  become: yes
  when: go_version|failed or go_version.stdout != go_version_target

- name: Add the Go bin directory to the PATH environment variable for all users
  template:
    src: go-bin.sh.j2
    dest: /etc/profile.d
  become: yes

- name: Set GOPATH for all users
  template:
    src: go-path.sh.j2
    dest: /etc/profile.d
  when: set_go_path
  become: yes

- name: Add the Go bin directory to the sudoers secure_path.
  lineinfile:
    dest: /etc/sudoers
    state: present
    regexp: "secure_path="
    insertafter: EOF
    line: 'Defaults        secure_path="/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/snap/bin:{{ set_go_path_args.go_bin }}"'
  become: yes
